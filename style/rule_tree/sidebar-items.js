initSidebarItems({"constant":[["FREE_LIST_LOCKED","A second sentinel value for the free list, indicating that it's locked (i.e. another thread is currently adding an entry). We spin if we find this value."],["FREE_LIST_SENTINEL","This value exists here so a node that pushes itself to the list can know that is in the free list by looking at is next pointer, and comparing it with null."],["RULE_TREE_GC_INTERVAL","The number of RuleNodes added to the free list before we will consider doing a GC when calling maybe_gc().  (The value is copied from Gecko, where it likely did not result from a rigorous performance analysis.)"]],"enum":[["CascadeLevel","The cascade level these rules are relevant at, as per[1][2][3]."],["RuleNodeChildren","The children of a single rule node."]],"fn":[["log_drop",""],["log_new",""]],"struct":[["ChildKey",""],["RuleNode","A node in the rule tree."],["RuleTree","The rule tree, the structure servo uses to preserve the results of selector matching."],["SelfAndAncestors","An iterator over a rule node and its ancestors."],["ShadowCascadeOrder","A counter to track how many shadow root rules deep we are. This is used to handle:"],["StrongRuleNode","A strong reference to a rule node."],["StyleSource","A style source for the rule node. It can either be a CSS style rule or a declaration block."],["WeakRuleNode",""]]});