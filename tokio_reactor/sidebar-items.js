initSidebarItems({"constant":[["CURRENT_REACTOR",""],["MAX_SOURCES",""],["TOKEN_SHIFT",""],["TOKEN_WAKEUP",""]],"enum":[["Direction",""],["Task","A wakeup handle for a task, which may be either a futures 0.1 or 0.2 task"]],"fn":[["_assert_kinds",""],["set_fallback",""],["with_default","Set the default reactor for the duration of the closure"]],"mod":[["atomic_task",""],["background",""],["platform",""],["poll_evented",""],["registration",""]],"static":[["HANDLE_FALLBACK","The global fallback reactor."]],"struct":[["Background","Handle to the reactor running on a background thread."],["Handle","A reference to a reactor."],["HandlePriv","Like `Handle`, but never `None`."],["Inner",""],["PollEvented","Associates an I/O resource that implements the [`std::Read`] and / or [`std::Write`] traits with the reactor that drives it."],["Reactor","The core reactor, or event loop."],["Registration","Associates an I/O resource with the reactor instance that drives it."],["ScheduledIo",""],["SetFallbackError","Error returned from `Handle::set_fallback`."],["Shutdown","Future that resolves when the reactor thread has shutdown."],["Turn","Return value from the `turn` method on `Reactor`."]]});