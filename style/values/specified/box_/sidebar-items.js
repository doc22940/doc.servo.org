initSidebarItems({"constant":[["_IMPL_DESERIALIZE_FOR_Clear",""],["_IMPL_DESERIALIZE_FOR_Float",""],["_IMPL_DESERIALIZE_FOR_OverflowAnchor",""],["_IMPL_DESERIALIZE_FOR_OverflowClipBox",""],["_IMPL_DESERIALIZE_FOR_OverscrollBehavior",""],["_IMPL_DESERIALIZE_FOR_Resize",""],["_IMPL_DESERIALIZE_FOR_ScrollSnapAxis",""],["_IMPL_DESERIALIZE_FOR_ScrollSnapStrictness",""],["_IMPL_DESERIALIZE_FOR_ScrollSnapType",""],["_IMPL_NUM_FROMPRIMITIVE_FOR_DISPLAY",""],["_IMPL_NUM_FROMPRIMITIVE_FOR_DISPLAYINSIDE",""],["_IMPL_NUM_FROMPRIMITIVE_FOR_DISPLAYOUTSIDE",""],["_IMPL_NUM_FROMPRIMITIVE_FOR_SCROLLSNAPALIGNKEYWORD",""],["_IMPL_SERIALIZE_FOR_Clear",""],["_IMPL_SERIALIZE_FOR_Float",""],["_IMPL_SERIALIZE_FOR_OverflowAnchor",""],["_IMPL_SERIALIZE_FOR_OverflowClipBox",""],["_IMPL_SERIALIZE_FOR_OverscrollBehavior",""],["_IMPL_SERIALIZE_FOR_Resize",""],["_IMPL_SERIALIZE_FOR_ScrollSnapAxis",""],["_IMPL_SERIALIZE_FOR_ScrollSnapStrictness",""],["_IMPL_SERIALIZE_FOR_ScrollSnapType",""]],"enum":[["Appearance","The value for the `appearance` property."],["BreakBetween","A kind of break between two boxes."],["BreakWithin","A kind of break within a box."],["Clear","https://drafts.csswg.org/css-box/#propdef-clear"],["DisplayInside",""],["DisplayOutside","Defines an elementâ€™s display type, which consists of the two basic qualities of how an element generates boxes https://drafts.csswg.org/css-display/#propdef-display"],["Float","https://drafts.csswg.org/css-box/#propdef-float"],["Overflow","The value for the `overflow-x` / `overflow-y` properties."],["OverflowAnchor",""],["OverflowClipBox",""],["OverscrollBehavior",""],["Resize","https://drafts.csswg.org/css-ui/#propdef-resize"],["ScrollSnapAlignKeyword","Specified value of scroll-snap-align keyword value."],["ScrollSnapAxis","https://drafts.csswg.org/css-scroll-snap-1/#snap-axis"],["ScrollSnapStrictness","https://drafts.csswg.org/css-scroll-snap-1/#snap-strictness"],["TransitionProperty","A given transition property, that is either `All`, a longhand or shorthand property, or an unsupported or custom property."]],"fn":[["change_bits_for_longhand",""],["change_bits_for_maybe_property",""],["is_valid_inside_for_list_item","Test a  Result for same values as above."],["parse_display_inside"," = flow | flow-root | table | flex | grid | ruby https://drafts.csswg.org/css-display/#typedef-display-inside"],["parse_display_inside_for_list_item","(flow | flow-root)?"],["parse_display_outside"," = block | inline | run-in https://drafts.csswg.org/css-display/#typedef-display-outside"],["parse_list_item","Parse `list-item`."]],"struct":[["AnimationName","A value for the `animation-name` property."],["Contain","Constants for contain: https://drafts.csswg.org/css-contain/#contain-property"],["Display",""],["ScrollSnapAlign","https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-align"],["ScrollSnapType","https://drafts.csswg.org/css-scroll-snap-1/#scroll-snap-type"],["TouchAction","Values for the `touch-action` property. These constants match Gecko's `NS_STYLE_TOUCH_ACTION_*` constants."],["WillChange","Provides a rendering hint to the user agent, stating what kinds of changes the author expects to perform on the element."],["WillChangeBits","The change bits that we care about."]],"type":[["AnimationIterationCount","https://drafts.csswg.org/css-animations/#animation-iteration-count"],["Perspective","A specified value for the `perspective` property."],["VerticalAlign","A specified value for the `vertical-align` property."]]});