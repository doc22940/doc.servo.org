initSidebarItems({"constant":[["_IMPL_DESERIALIZE_FOR_SwapChainId",""],["_IMPL_SERIALIZE_FOR_SwapChainId",""]],"enum":[["Display","The normalized device coordinate space, where the display is from (-1,-1) to (1,1)."],["EnvironmentBlendMode","https://immersive-web.github.io/webxr-ar-module/#xrenvironmentblendmode-enum"],["Error","Errors that can be produced by XR."],["Event",""],["EventBuffer","Convenience structure for buffering up events when no event callback has been set"],["Floor","The coordinate space of the floor https://immersive-web.github.io/webxr/#dom-xrreferencespacetype-local-floor"],["FrameUpdateEvent",""],["Handedness",""],["Input","The coordinate space of an input device"],["LeftEye","The coordinate space of the left eye https://immersive-web.github.io/webxr/#dom-xreye-left"],["MockDeviceMsg",""],["MockInputMsg",""],["MockViewsInit",""],["Native","The native 3D coordinate space of the device This is not part of the webvr specification."],["RightEye","The coordinate space of the right eye https://immersive-web.github.io/webxr/#dom-xreye-right"],["SelectEvent",""],["SelectKind",""],["SessionMode","https://www.w3.org/TR/webxr/#xrsessionmode-enum"],["TargetRayMode",""],["Viewer","The coordinate space of the viewer https://immersive-web.github.io/webxr/#dom-xrreferencespacetype-viewer"],["Viewport","The unnormalized device coordinate space, where the display is from (0,0) to (w,h), measured in pixels."],["Views","Whether a device is mono or stereo, and the views it supports."],["Visibility",""]],"fn":[["channel","Create a connected [IpcSender] and [IpcReceiver] that transfer messages of a given type privided by type `T` or inferred by the types of messages sent by the sender."],["recv_timeout",""]],"mod":[["device","Traits to be implemented by backends"],["error",""],["events",""],["frame",""],["input",""],["mock",""],["registry",""],["session",""],["util",""],["view","This crate uses `euclid`'s typed units, and exposes different coordinate spaces."]],"static":[["NEXT_SWAP_CHAIN_ID",""]],"struct":[["Frame","The per-frame data that is provided by the device. https://www.w3.org/TR/webxr/#xrframe"],["InputFrame",""],["InputId",""],["InputSource",""],["MainThreadRegistry",""],["MockDeviceInit",""],["MockInputInit",""],["MockViewInit",""],["Quitter",""],["Receiver","Receiving end of a channel using serialized messages."],["Registry",""],["Sender","Sending end of a channel using serialized messages."],["Session","An object that represents an XR session. This is owned by the content thread. https://www.w3.org/TR/webxr/#xrsession-interface"],["SessionBuilder","A type for building XR sessions"],["SessionInit","https://immersive-web.github.io/webxr/#dictdef-xrsessioninit"],["SessionThread","For devices that want to do their own thread management, the `SessionThread` type is exposed."],["SwapChainId",""],["View","For each eye, the transform from the viewer to that eye, its projection onto its display, and its display viewport. For stereo displays, we have a `View<LeftEye>` and a `View<RightEye>`. For mono displays, we hagve a `View<Viewer>` (where the transform is the identity). https://immersive-web.github.io/webxr/#xrview"]],"trait":[["DeviceAPI","A trait for using an XR device"],["DiscoveryAPI","A trait for discovering XR devices"],["MainThreadSession","Devices that need to can run sessions on the main thread."],["MainThreadWaker",""],["MockDiscoveryAPI","A trait for discovering mock XR devices"]]});