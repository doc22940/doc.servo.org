initSidebarItems({"constant":[["DEFAULT_TEXTURE",""],["SHADER_KIND_FRAGMENT",""],["SHADER_KIND_VERTEX",""],["SHADER_VERSION_GL",""],["SHADER_VERSION_GLES",""],["_IMPL_SERIALIZE_FOR_GpuFrameId",""],["_IMPL_SERIALIZE_FOR_TextureFilter",""],["_IMPL_SERIALIZE_FOR_TextureFormatPair",""]],"enum":[["DepthFunction",""],["DrawTarget","Contains the parameters necessary to bind a draw target."],["FBOTarget",""],["ReadTarget","Contains the parameters necessary to bind a texture-backed read target."],["ShaderError",""],["TexStorageUsage","Describes for which texture formats to use the glTexStorage* family of functions."],["TextureFilter",""],["UploadMethod","Method of uploading texel data from CPU to GPU."],["VertexAttributeKind",""],["VertexUsageHint",""]],"fn":[["build_shader_main_string","Walks the main .glsl file, including any imports."],["build_shader_prefix_string","Walks the prefix section of the shader string, which manages the various defines for features etc."],["build_shader_strings","Creates heap-allocated strings for both vertex and fragment shaders. Public to be accessible to tests."],["depth_target_size_in_bytes","Returns the size in bytes of a depth target with the given dimensions."],["do_build_shader_string","Walks the given shader string and applies the output to the provided callback. Assuming an override path is not used, does no heap allocation and no I/O."],["get_gl_target",""],["get_shader_source",""],["get_shader_version",""],["record_gpu_alloc","Records an allocation in VRAM."],["record_gpu_free","Records an deallocation in VRAM."],["supports_extension",""],["texels_to_u8_slice",""],["total_gpu_bytes_allocated","Returns the number of GPU bytes currently allocated."]],"static":[["GPU_BYTES_ALLOCATED","Tracks the total number of GPU bytes allocated across all WebRender instances."]],"struct":[["BoundPBO",""],["Capabilities",""],["CustomVAO",""],["Device",""],["ExternalTexture",""],["FBOId",""],["FormatDesc",""],["GpuFrameId","Sequence number for frames, as tracked by the device layer."],["IBOId",""],["PBO",""],["PixelBuffer",""],["Program",""],["ProgramBinary",""],["ProgramCache",""],["ProgramCacheEntry",""],["ProgramSourceInfo",""],["RBOId",""],["SharedDepthTarget","A refcounted depth target, which may be shared by multiple textures across the device."],["Stream",""],["Texture","WebRender interface to an OpenGL texture."],["TextureFlags",""],["TextureFormatPair","A structure defining a particular workflow of texture transfers."],["TextureSlot",""],["TextureUploader",""],["UniformLocation",""],["UploadChunk",""],["UploadTarget",""],["VAO",""],["VBO",""],["VBOId",""],["VertexAttribute",""],["VertexDescriptor",""]],"trait":[["FileWatcherHandler",""],["ProgramCacheObserver","The interfaces that an application can implement to handle ProgramCache update"],["Texel","Plain old data that can be used to initialize a texture."]]});