initSidebarItems({"enum":[["Entry","Entry for an existing key-value pair or a vacant location to insert one."],["Inserted",""]],"fn":[["desired_pos",""],["find_existing_entry_at","Find, in the indices, an entry that already exists at a known position inside self.entries in the IndexMap."],["hash_elem_using",""],["key_cmp",""],["lo32",""],["probe_distance","The number of steps that `current` is forward of the desired position for hash"],["split_lo_hi",""],["to_raw_capacity",""],["usable_capacity",""]],"struct":[["Drain",""],["IndexMap","A hash table where the iteration order of the key-value pairs is independent of the hash values of the keys."],["IntoIter",""],["Iter",""],["IterMut",""],["Keys",""],["OccupiedEntry",""],["OrderMapCore",""],["Pos","`Pos` is stored in the `indices` array and it points to the index of a `Bucket` in self.core.entries."],["ShortHash","A possibly truncated hash value."],["ShortHashProxy",""],["VacantEntry",""],["Values",""],["ValuesMut",""]],"trait":[["MutableKeys","Opt-in mutable access to keys."],["Size","Trait for the \"size class\". Either u32 or u64 depending on the index size needed to address an entry's indes in self.core.entries."]]});